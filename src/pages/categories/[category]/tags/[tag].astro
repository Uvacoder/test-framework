---
import {
	formatFieldName,
	serializeFieldName,
	serializeFieldValue,
	formatFieldValue
} from "@framework/system/src/util/string-utils"
import { visuallyHidden } from "@framework/system/src/styles/utilities.css"
import { getSearchData } from '../../../../data/search-data'
import BaseLayout from '../../../../layouts/base.astro'
import { applyPreFilters } from '@framework/system/src/components/search/query-util'
import Search from '../../../../components/search.tsx'

export async function getStaticPaths() {
	const searchData = await getSearchData(import.meta.env.SNOWPACK_PUBLIC_FRAMEWORK)
	return searchData.flatMap(
		category => (category.subCategories ?? []).map(
			tag => {
				const preFilters = { category: [category.name], tag: [tag], field: [] }
				return ({
					params: {
						category: serializeFieldName(category.name),
						tag: serializeFieldValue(tag) 
					},
					props: { data: applyPreFilters(searchData, preFilters), appliedPreFilters: preFilters, tag, category: category.name }
				})
			}
		)
	)
}

const { category, tag, ...props } = Astro.props
const title = `${formatFieldName(import.meta.env.SNOWPACK_PUBLIC_FRAMEWORK)} ${formatFieldValue(tag)} ${formatFieldName(category)}`
---
<head>
	<meta name="description" content={`Browse and search through relevant ${title}`}/>
</head>
<BaseLayout title={title} currentCategory={category} currentTag={tag}>
	<h1 class={visuallyHidden}>{title}</h1>
	<Search client:load siteName={import.meta.env.SNOWPACK_PUBLIC_FRAMEWORK} {...props} />
</BaseLayout>
