---
import {
	formatFieldName,
	serializeFieldName,
} from "@framework/system/src/util/string-utils"
import { visuallyHidden } from "@framework/system/src/styles/utilities.css"
import { getSearchData } from '../../../data/search-data'
import BaseLayout from '../../../layouts/base.astro'
import { applyPreFilters } from '@framework/system/src/components/search/query-util'
import Search from '../../../components/search.tsx'

export async function getStaticPaths() {
	const searchData = await getSearchData(import.meta.env.SNOWPACK_PUBLIC_FRAMEWORK)
	return searchData.map(category => { 
		const preFilters = { category: [category.name], tag: [], field: [] };
		return ({
			params: {
				category: serializeFieldName(category.name)
			},
			props: { category: category.name, data: applyPreFilters(searchData, preFilters), appliedPreFilters: preFilters }
		})
	})
}

const { category, ...props } = Astro.props

const title = `${formatFieldName(import.meta.env.SNOWPACK_PUBLIC_FRAMEWORK)} ${formatFieldName(category)}`
---
<head>
	<meta name="description" content={`Browse and search through relevant ${title}`}/>
</head>
<BaseLayout title={title} currentCategory={category}>
	<h1 class={visuallyHidden}>{title}</h1>
	<Search client:load {...props} siteName={import.meta.env.SNOWPACK_PUBLIC_FRAMEWORK} />
</BaseLayout>